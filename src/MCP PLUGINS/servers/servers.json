{
  "comment": "MCP Server Registry - Active servers have agent.py implementations",
  "servers": [
    {
      "name": "playwright",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "--yes",
        "@playwright/mcp@latest",
        "--browser=msedge",
        "--viewport-size=1280,720"
      ],
      "read_timeout_seconds": 120
    },
    {
      "name": "github",
      "active": true,
      "type": "stdio",
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-e",
        "GITHUB_PERSONAL_ACCESS_TOKEN",
        "ghcr.io/github/github-mcp-server"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "env:GITHUB_PERSONAL_ACCESS_TOKEN"
      },
      "description": "GitHub MCP server for repository management, issues, PRs, and code operations"
    },
    {
      "name": "docker",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "uvx",
        "docker-mcp"
      ],
      "read_timeout_seconds": 120,
      "description": "Docker MCP server for container management, compose deployment, and logs retrieval"
    },
    {
      "name": "desktop",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "@wonderwhy-er/desktop-commander@latest"
      ],
      "read_timeout_seconds": 120,
      "description": "Desktop Commander MCP for terminal control, file system operations, and process management"
    },
    {
      "name": "context7",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@upstash/context7-mcp@latest"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "DEFAULT_MINIMUM_TOKENS": "10000"
      },
      "description": "Context7 MCP for up-to-date code documentation and examples"
    },
    {
      "name": "redis",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-redis"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "REDIS_URL": "env:REDIS_URL"
      },
      "description": "Redis MCP for key-value store operations, caching, and vector search"
    },
    {
      "name": "supabase",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@supabase/mcp-server-supabase@latest",
        "--access-token",
        "sbp_fc0cfb27789cdd69ae049da76551be465e05ee37"
      ],
      "read_timeout_seconds": 120,
      "description": "Supabase MCP for PostgreSQL database operations, authentication, storage, and real-time subscriptions"
    },
    {
      "name": "time",
      "active": true,
      "type": "stdio",
      "command": "python",
      "args": [
        "-m",
        "mcp_server_time"
      ],
      "read_timeout_seconds": 120,
      "description": "Time MCP server for time-related operations, timezone conversions, and scheduling"
    },
    {
      "name": "taskmanager",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@kazuph/mcp-taskmanager"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "TASK_MANAGER_FILE_PATH": "~/Documents/tasks.json"
      },
      "description": "TaskManager MCP for task creation, tracking, and management with JSON file storage"
    },
    {
      "name": "windows-core",
      "active": true,
      "type": "stdio",
      "command": "python",
      "args": [
        "C:\\Users\\User\\Desktop\\sakana-desktop-assistant\\src\\MCP PLUGINS\\servers\\windows-core\\server.py"
      ],
      "read_timeout_seconds": 120,
      "description": "Windows Core MCP with 25 essential tools for file operations, process management, and system information (under OpenAI's 128-tool limit)"
    },
    {
      "name": "memory",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-memory"
      ],
      "read_timeout_seconds": 120,
      "description": "Memory MCP for knowledge graph management with entities and relations"
    },
    {
      "name": "filesystem",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "C:\\Users\\User\\Desktop\\sakana-desktop-assistant"
      ],
      "read_timeout_seconds": 120,
      "description": "Filesystem MCP for file and directory operations with configurable allowed directories"
    },
    {
      "name": "brave-search",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-brave-search"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "BRAVE_API_KEY": "env:BRAVE_API_KEY"
      },
      "description": "Brave Search MCP for web search with privacy-focused Brave API"
    },
    {
      "name": "fetch",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-fetch"
      ],
      "read_timeout_seconds": 120,
      "description": "Fetch MCP for HTTP requests and web content retrieval"
    },
    {
      "name": "youtube",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "youtube-transcript-mcp-server"
      ],
      "read_timeout_seconds": 120,
      "description": "YouTube MCP for fetching video transcripts and captions"
    },
    {
      "name": "n8n",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "n8n-mcp"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "N8N_API_URL": "env:N8N_API_URL",
        "N8N_API_KEY": "env:N8N_API_KEY",
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error"
      },
      "description": "n8n MCP for workflow automation, node documentation, and n8n API integration"
    },
    {
      "name": "sequential-thinking",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "DISABLE_THOUGHT_LOGGING": "false"
      },
      "description": "Sequential Thinking MCP for dynamic problem-solving through structured thought sequences"
    },
    {
      "name": "tavily",
      "active": true,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "tavily-mcp@latest"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "TAVILY_API_KEY": "env:TAVILY_API_KEY"
      },
      "description": "Tavily MCP for real-time web search, data extraction, website mapping, and web crawling"
    },
    {
      "name": "git",
      "active": false,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-git"
      ],
      "read_timeout_seconds": 60,
      "description": "Git MCP server for local repository operations: status, diff, log, remote, branch listing"
    },
    {
      "name": "puppeteer",
      "active": false,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-puppeteer"
      ],
      "read_timeout_seconds": 120,
      "description": "Puppeteer MCP for headless browser automation (alternative to Playwright)"
    },
    {
      "name": "huggingface",
      "active": false,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "@modelcontextprotocol/server-huggingface"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "HUGGINGFACE_API_KEY": "env:HUGGINGFACE_API_KEY"
      },
      "description": "Hugging Face MCP - INACTIVE (npm package @modelcontextprotocol/server-huggingface not found)"
    },
    {
      "name": "elevenlabs",
      "active": false,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "elevenlabs-mcp"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "ELEVENLABS_API_KEY": "env:ELEVENLABS_API_KEY"
      },
      "description": "ElevenLabs MCP - INACTIVE (npm package elevenlabs-mcp may not exist)"
    },
    {
      "name": "mindsdb",
      "active": false,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "mindsdb-mcp-server"
      ],
      "read_timeout_seconds": 120,
      "env_vars": {
        "MINDSDB_API_KEY": "env:MINDSDB_API_KEY"
      },
      "description": "MindsDB MCP - INACTIVE (npm package mindsdb-mcp-server may not exist)"
    },
    {
      "name": "gpt-researcher",
      "active": false,
      "type": "stdio",
      "command": "C:\\Windows\\System32\\cmd.exe",
      "args": [
        "/c",
        "npx",
        "-y",
        "gpt-researcher-mcp"
      ],
      "read_timeout_seconds": 180,
      "description": "GPT Researcher MCP for autonomous research, web scraping, and report generation (package may not exist - set active:false)"
    }
  ],
  "inactive_servers_note": "The following servers are inactive: git (redundant with GitHub), puppeteer (using Playwright instead), huggingface, elevenlabs, mindsdb, gpt-researcher (npm packages not available or non-functional)"
}