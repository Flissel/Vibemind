# Sakana Assistant Configuration
# Enable the web GUI
enable_gui: true

# React UI settings for SPA migration
react_ui_enabled: true
react_ui_dist_dir: c:\Users\User\Desktop\sakana-desktop-assistant\src\ui\webapp\dist

# Sakana Desktop Assistant Configuration

# LLM Settings
llm_provider: "openai"  # Options: local, openai, anthropic, openrouter
model_name: "gpt-4o-mini"  # Model to use
api_key: null  # Set via environment variable or here
temperature: 0.7
max_tokens: 2048

# OpenRouter Settings (Global)
openrouter:
  enabled: true  # Enable OpenRouter for intelligent model routing
  api_key: null  # Set via OPENROUTER_API_KEY environment variable
  base_url: "https://openrouter.ai/api/v1"

  # Environment Mode: "dev" or "prod"
  # - dev: Fixed models for fast development (gpt-4o, claude-sonnet-4.0)
  # - prod: Adaptive selection based on task complexity
  mode: "dev"  # Change to "prod" for production deployment

  # Development Mode - Fixed models for speed and cost efficiency
  dev_models:
    default: "openai/gpt-4o"  # Fast, balanced model for all tasks
    alternative: "anthropic/claude-sonnet-4.0"  # High-quality alternative
    use_adaptive: false  # Disable task-based routing in dev

  # Production Mode - Adaptive model selection
  model_selection:
    # Primary model for most tasks
    primary: "anthropic/claude-3.5-haiku"

    # Complex tasks requiring deep reasoning
    complex: "anthropic/claude-3.5-sonnet"

    # Reasoning tasks (no function calling)
    reasoning: "openai/o1-mini"

    # Fallback if primary unavailable
    fallback: "openai/gpt-4o-mini"

  # Task Classification Rules
  task_routing:
    # Keywords that trigger reasoning model
    reasoning_keywords:
      - "analyze architecture"
      - "design system"
      - "complex algorithm"
      - "optimize performance"
      - "security audit"

    # Keywords that trigger complex model
    complex_keywords:
      - "refactor"
      - "debug complex"
      - "multi-step"
      - "integration"

    # Everything else uses primary model

  # Per-MCP-Tool Model Overrides
  tool_models:
    github: "anthropic/claude-3.5-sonnet"  # GitHub needs good code understanding
    playwright: "anthropic/claude-3.5-haiku"  # Browser automation is straightforward
    docker: "anthropic/claude-3.5-haiku"  # Simple container ops
    desktop: "anthropic/claude-3.5-haiku"  # Terminal commands are simple

# Memory Settings
max_short_term_memory: 100
max_long_term_memory: 10000

# Learning Settings
learning_rate: 0.01
evolution_generations: 10
population_size: 20
mutation_rate: 0.1

# Security Settings
sandbox_enabled: true
max_execution_time: 30  # seconds
allowed_operations:
  - read_file
  - write_file
  - execute_code
  - search_web
  - manage_tasks

# MCP Session Settings
mcp_session:
  termination:
    graceful_timeout_seconds: 2  # Wait before force kill
    verification_wait_seconds: 1  # Wait before verifying kill success
    tasklist_timeout_seconds: 5  # Timeout for tasklist/PID check

